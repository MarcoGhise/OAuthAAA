<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:oauth="http://www.springframework.org/schema/security/oauth2"
	xmlns:sec="http://www.springframework.org/schema/security" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/security/oauth2 http://www.springframework.org/schema/security/spring-security-oauth2-1.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd 
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">

	<sec:http pattern="/oauth/token" create-session="stateless"
		authentication-manager-ref="authenticationManager">
		<sec:intercept-url pattern="/oauth/token" access="IS_AUTHENTICATED_FULLY" />
		<sec:anonymous enabled="false" />
		<!-- <sec:http-basic entry-point-ref="clientAuthenticationEntryPoint" /> -->

		<sec:form-login login-page="/index.jsp" />
		<sec:custom-filter ref="clientCredentialsTokenEndpointFilter"
			before="BASIC_AUTH_FILTER" />
		<sec:access-denied-handler ref="oauthAccessDeniedHandler" />
	</sec:http>

	<sec:http pattern="/oauth/me" create-session="never"
        entry-point-ref="oauthAuthenticationEntryPoint">
        <sec:anonymous enabled="false" />
        <sec:intercept-url pattern="/oauth/me" method="GET" access="IS_AUTHENTICATED_FULLY" />
        <sec:custom-filter ref="resourceServerFilter" before="PRE_AUTH_FILTER" />
        <sec:access-denied-handler ref="oauthAccessDeniedHandler" />
    </sec:http>



	<sec:http pattern="/oauth/authorize" create-session="never"
		entry-point-ref="oauthAuthenticationEntryPoint">

		<sec:anonymous enabled="false" />
		<sec:intercept-url pattern="/oauth/authorize"
			method="GET" access="IS_AUTHENTICATED_FULLY" />
		<sec:custom-filter ref="clientCredentialsTokenEndpointFilter"
			before="BASIC_AUTH_FILTER" />

	</sec:http>

	<bean id="oauthAuthenticationEntryPoint"
		class="org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint">
	</bean>

	<bean id="clientAuthenticationEntryPoint"
		class="org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint">
		<property name="realmName" value="springsec/client" />
		<property name="typeName" value="Basic" />
	</bean>

	<bean id="oauthAccessDeniedHandler"
		class="org.springframework.security.oauth2.provider.error.OAuth2AccessDeniedHandler">
	</bean>


	<bean id="clientCredentialsTokenEndpointFilter" class="it.iol.oauthaaa.security.AAAClientCredential">
		<property name="authenticationManager" ref="authenticationManager" />
	</bean>

	<sec:authentication-manager alias="authenticationManager">
		<sec:authentication-provider
			user-service-ref="clientDetailsUserService" />
	</sec:authentication-manager>

	<bean id="clientDetailsUserService"
		class="org.springframework.security.oauth2.provider.client.ClientDetailsUserDetailsService">
		<constructor-arg ref="clientDetails" />
	</bean>

	<bean id="clientDetails" class="it.iol.oauthaaa.security.AAAClientDetailsService">
		<property name="id" value="mysupplycompany" />
		<property name="secretKey" value="mycompanykey" />
	</bean>

	<bean id="clientDetailsJdbc"
		class="org.springframework.security.oauth2.provider.JdbcClientDetailsService">
		<constructor-arg ref="jdbcTemplate" />
	</bean>

	<!-- <sec:authentication-manager id="userAuthenticationManager"> <sec:authentication-provider 
		ref="customUserAuthenticationProvider" /> </sec:authentication-manager> <bean 
		id="customUserAuthenticationProvider" class="it.iol.oauthaaa.security.AAAUserAuthenticationProvider"> 
		</bean> -->
	<oauth:authorization-server
		client-details-service-ref="clientDetails" token-services-ref="tokenServices"


		authorization-request-manager-ref="AAAAuthorizationRequestManager"

		user-approval-handler-ref="AAATokenServicesUserApprovalHandler"
		user-approval-page="forward:/oauth/confirm_access_custom">
		<oauth:authorization-code
			authorization-code-services-ref="JdbcAuthorizationCodeServices" />
		<oauth:implicit />
		<oauth:refresh-token />
		<oauth:client-credentials />

	</oauth:authorization-server>

	<bean id="AAATokenServicesUserApprovalHandler"
		class="it.iol.oauthaaa.security.AAATokenServicesUserApprovalHandler">
		<property name="tokenServices" ref="tokenServices" />
		<property name="clientRegistration" ref="JdbcClientDetailsService" />
	</bean>

	<bean id="JdbcClientDetailsService"
		class="org.springframework.security.oauth2.provider.JdbcClientDetailsService">
		<constructor-arg ref="jdbcTemplate" />
	</bean>

	<bean id="AAAAuthorizationRequestManager" class="it.iol.oauthaaa.security.AAAAuthorizationRequestManager">
		<constructor-arg ref="clientDetails" />
	</bean>


	<bean id="JdbcAuthorizationCodeServices"
		class="org.springframework.security.oauth2.provider.code.JdbcAuthorizationCodeServices">
		<constructor-arg ref="jdbcTemplate" />
	</bean>


	<oauth:resource-server id="resourceServerFilter"
		resource-id="springsec" token-services-ref="tokenServices" />

	<bean id="tokenStore"
		class="org.springframework.security.oauth2.provider.token.JdbcTokenStore">
		<constructor-arg ref="jdbcTemplate" />
	</bean>
	<!-- <bean id="tokenStore" class="org.springframework.security.oauth2.provider.token.InMemoryTokenStore" 
		/> -->
	<bean id="tokenServices"
		class="org.springframework.security.oauth2.provider.token.DefaultTokenServices">
		<property name="tokenStore" ref="tokenStore" />
		<property name="supportRefreshToken" value="true" />
		<!-- <property name="accessTokenValiditySeconds" value="300" /> -->
		<property name="clientDetailsService" ref="clientDetails" />
	</bean>

	<bean id="jdbcTemplate"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/oauthdb" />
		<property name="username" value="root" />
		<property name="password" value="" />
	</bean>

	<mvc:annotation-driven />

	<mvc:default-servlet-handler />

	<context:annotation-config />

	<context:component-scan base-package="it.iol.oauthaaa.controller" />
<!-- 
	<bean
		class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="mediaTypes">
			<map>
				<entry key="htm" value="text/htm" />
				<entry key="html" value="text/html" />
				<entry key="json" value="application/json" />
			</map>
		</property>
		<property name="viewResolvers">
			<list>
				<bean class="org.springframework.web.servlet.view.BeanNameViewResolver" />
				<bean
					class="org.springframework.web.servlet.view.InternalResourceViewResolver">
					<property name="prefix" value="/WEB-INF/jsp/" />
					<property name="suffix" value=".jsp" />
				</bean>
			</list>
		</property>

		<property name="defaultViews">
			<list>
				<bean
					class="org.springframework.web.servlet.view.json.MappingJacksonJsonView" />

			</list>
		</property>
	</bean>
-->
				<bean class="org.springframework.web.servlet.view.BeanNameViewResolver" />
				<bean
					class="org.springframework.web.servlet.view.InternalResourceViewResolver">
					<property name="prefix" value="/WEB-INF/jsp/" />
					<property name="suffix" value=".jsp" />
				</bean>	

	<bean id="AAAProxy" class="it.iol.oauthaaa.security.AAAProxy" />
	
</beans>
